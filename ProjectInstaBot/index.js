process.env["NTBA_FIX_319"] = 1;
const TelegramBot = require('node-telegram-bot-api');
// const translate = require('extended-google-translate-api');
const debug = require('./helpers');
var schedule = require('node-schedule');
const TOKEN = '808615413:AAH-isfi1X1nzpalYtHF-3NGuZxeGqdn_64';
console.log('Bot has been started ...');

const bot = new TelegramBot(TOKEN,{
    polling: {
        interval: 300,
        autoStart: true,
        params: {
            timeout: 10
        }
    }
});


// forever start main.js  # –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// forever restart main.js # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// forever stop main.js # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// forever list # –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
// forever restartall # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
// forever stopall # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
// https://lonelyelk.ru/posts/57/


var cron = require('cron');
var cronJob = cron.job("0 */1 * * * *", function(){
    // perform operation e.g. GET request http.get() etc.
    console.info('cron job completed');
});
cronJob.start();


const inline_keyboard = [
    [{text: '–†—É—Å—Å–∫–∏–π üá∑üá∫', callback_data:'rus'},
        {text: 'English üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø', callback_data:'eng'},
        {text: 'CN üá®üá≥', callback_data:'cn'}],
    [{text: 'IN üáÆüá≥', callback_data:'in'},
        {text: 'KR üá∞üá∑Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø', callback_data:'kr'},
        {text: 'JP üáØüáµ', callback_data:'jp'}],
    [{text: 'DE üá©üá™', callback_data:'de'},
        {text: 'Arab üá∏üá¶Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø', callback_data:'arab'},
        {text: 'ES üá™üá∏', callback_data:'es'}]
];
const activation_keyboard = [
    [{text: '–î–∞‚úÖ', callback_data:'yes'},
        {text: '–ù–µ—Ç‚ùåÛ†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø', callback_data:'no'}]
];

bot.on('callback_query', query =>{
// , message_id, text - to const
    const {chat} = query.message;
    switch (query.data) {
        case 'rus':
            bot.sendMessage(chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫‚ùóÔ∏è');
            // setTimeout(() =>{
            // bot.deleteMessage(chat.id, message_Id);
            // },2000);
            break
        case 'eng':
            bot.sendMessage(chat.id, `You selected english language‚ùóÔ∏è`);
            break
        case 'cn':
            bot.sendMessage(chat.id, `‰Ω†ÈÅ∏Êìá‰∫Ü‰∏≠Êñá`);
            break
        case 'in':
            bot.sendMessage(chat.id, `Apakah kamu memilih bahasa indonesia`);
            break
        case 'kr':
            bot.sendMessage(chat.id, `ÎÑàÎäî ÌïúÍµ≠Ïñ¥Î•º ÏÑ†ÌÉùÌñàÎã§.`);
            break
        case 'jp':
            bot.sendMessage(chat.id, `„ÅÇ„Å™„Åü„ÅØÊó•Êú¨Ë™û„ÇíÈÅ∏„Çì„Å†`);
            break
        case 'de':
            bot.sendMessage(chat.id, `Sie haben die deutsche Sprache gew√§hlt`);
            break
        case 'arab':
            bot.sendMessage(chat.id, `ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿä!`);
            break
        case 'es':
            bot.sendMessage(chat.id, `¬øEscogiste el idioma espa√±ol?`);
            break
    }
    bot.answerCallbackQuery({
        callback_query_id: query.id
    })
});
// , [source,match]
bot.onText(/\/start/,(msg) => {
    const chat_Id = msg.chat.id;
    const markdown = `*Hello, ${msg.from.first_name}!üñê* \n_Select language: _`;
    bot.sendMessage(chat_Id, markdown, {
        parse_mode: 'Markdown',
        reply_markup:{
            inline_keyboard
        }
    } );

});

bot.onText(/\/activation/, msg=>{
    const chat_Id = msg.chat.id;
    bot.sendMessage(chat_Id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º ‚úèÔ∏è...');
    bot.on('text', (msg)=>{
        if (msg.text!==null){
            bot.sendMessage(chat_Id, "–≠—Ç–æ –í–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º? https://www.instagram.com/"+msg.text,{
                reply_markup:{
                    inline_keyboard: activation_keyboard
                }
            });
        }
    });
});
bot.on('callback_query', query =>{
    const {chat} = query.message;
    switch (query.data) {
        case 'yes':
            bot.sendMessage(chat.id, 'Excellentüëå');
            break
        case 'no':
            bot.sendMessage(chat.id, `–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–µ–µ‚ö†Ô∏è`);
            bot.on('text', (msg)=>{
                if (msg.text!==null){
                    bot.sendMessage(chat_Id, "–≠—Ç–æ –í–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º? https://www.instagram.com/"+msg.text,{
                        reply_markup:{
                            inline_keyboard: activation_keyboard
                        }
                    });
                }
            });
            break
    }
    bot.answerCallbackQuery({
        callback_query_id: query.id
    })
});
